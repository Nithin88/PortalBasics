<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function() {

    /*
    Reference artcile 
    https://community.servicenow.com/community?id=community_blog&sys_id=461e226ddbd0dbc01dcaf3231f96198b
    */
    /* widget controller */
    var c = this;

    // Define our hard-coded data
    var data = [{
        "category": "Hardware",
        "value": 10
    }, {
        "category": "Software",
        "value": 24
    }, {
        "category": "Inquiry",
        "value": 14
    }, {
        "category": "Network",
        "value": 34
    }];

    // Set the width of the chart along with the height of each bar
    var width = 600,
        barHeight = 20;

    var chart = d3.select(".chart")
        .attr("width", width)
        .attr("height", barHeight * data.length);

    // Create a function to automatically scale the bars correctly
    var x = d3.scaleLinear()
        .range([0, width])
        .domain([0, d3.max(data, function(d) {
            return d.value;
        })]);

    // Add a g container for each row from our data
    var bar = chart.selectAll("g")
        .data(data)
        .enter().append("g")
        .attr("transform", function(d, i) {
            return "translate(0," + i * barHeight + ")";
        });

    // Add a rectangle element with the width based off of the value from that row of data
    bar.append("rect")
        .attr("width", function(d) {
            return x(d.value);
        })
        .attr("height", barHeight - 1);

    // Add text elements to serve as labels of our categories and values
    bar.append("text")
        .attr("x", 3)
        .attr("y", barHeight / 2)
        .attr("dy", ".35em")
        .text(function(d) {
            return d.category;
        });

    bar.append("text")
        .attr("x", function(d) {
            return x(d.value) - 15;
        })
        .attr("y", barHeight / 2)
        .attr("dy", ".35em")
        .text(function(d) {
            return d.value;
        });
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.chart rect {

  fill: steelblue;

}

.chart text {

  fill: white;

  font: 10px sans-serif;

  text-anchor: end;

}

.centered-chart {

  text-align: center;

}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>d3_bar_chart</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>D3 Bar Chart</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {  /* populate the 'data' object */  /* e.g., data.table = $sp.getValue('table'); */})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>nithin</sys_created_by>
        <sys_created_on>2020-06-04 05:19:45</sys_created_on>
        <sys_id>9769befbdb4d501092ddcd3f29961967</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>D3 Bar Chart</sys_name>
        <sys_package display_value="Service Portal" source="x_171481_sp">e6a24885dbc4d01092ddcd3f299619ee</sys_package>
        <sys_policy/>
        <sys_scope display_value="Service Portal">e6a24885dbc4d01092ddcd3f299619ee</sys_scope>
        <sys_update_name>sp_widget_9769befbdb4d501092ddcd3f29961967</sys_update_name>
        <sys_updated_by>nithin</sys_updated_by>
        <sys_updated_on>2020-06-04 05:46:45</sys_updated_on>
        <template><![CDATA[<div>
	<div class="centered-chart">
		<h1>D3 Bar Chart</h1>
		<svg class="chart"></svg>
	</div>
</div>]]></template>
    </sp_widget>
</record_update>
